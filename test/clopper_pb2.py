# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: clopper.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='clopper.proto',
  package='hopperextension',
  syntax='proto3',
  serialized_pb=_b('\n\rclopper.proto\x12\x0fhopperextension\"\x1f\n\x0cHelloRequest\x12\x0f\n\x07request\x18\x01 \x01(\t\"\x1c\n\x08Greeting\x12\x10\n\x08greeting\x18\x01 \x01(\t\" \n\rStatusRequest\x12\x0f\n\x07request\x18\x01 \x01(\t\".\n\x0eInstanceUpdate\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x1d\n\nHopRequest\x12\x0f\n\x07trigger\x18\x01 \x01(\t\"8\n\nHopResults\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\t2\xf3\x01\n\x07\x43lopper\x12\x46\n\x08SayHello\x12\x1d.hopperextension.HelloRequest\x1a\x19.hopperextension.Greeting\"\x00\x12S\n\x0cUpdateStatus\x12\x1e.hopperextension.StatusRequest\x1a\x1f.hopperextension.InstanceUpdate\"\x00\x30\x01\x12K\n\rExecuteHopper\x12\x1b.hopperextension.HopRequest\x1a\x1b.hopperextension.HopResults\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='hopperextension.HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='hopperextension.HelloRequest.request', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=65,
)


_GREETING = _descriptor.Descriptor(
  name='Greeting',
  full_name='hopperextension.Greeting',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='greeting', full_name='hopperextension.Greeting.greeting', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=95,
)


_STATUSREQUEST = _descriptor.Descriptor(
  name='StatusRequest',
  full_name='hopperextension.StatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='hopperextension.StatusRequest.request', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=97,
  serialized_end=129,
)


_INSTANCEUPDATE = _descriptor.Descriptor(
  name='InstanceUpdate',
  full_name='hopperextension.InstanceUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='hopperextension.InstanceUpdate.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='hopperextension.InstanceUpdate.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=131,
  serialized_end=177,
)


_HOPREQUEST = _descriptor.Descriptor(
  name='HopRequest',
  full_name='hopperextension.HopRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='trigger', full_name='hopperextension.HopRequest.trigger', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=179,
  serialized_end=208,
)


_HOPRESULTS = _descriptor.Descriptor(
  name='HopResults',
  full_name='hopperextension.HopResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='hopperextension.HopResults.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='hopperextension.HopResults.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='hopperextension.HopResults.data', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=266,
)

DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['Greeting'] = _GREETING
DESCRIPTOR.message_types_by_name['StatusRequest'] = _STATUSREQUEST
DESCRIPTOR.message_types_by_name['InstanceUpdate'] = _INSTANCEUPDATE
DESCRIPTOR.message_types_by_name['HopRequest'] = _HOPREQUEST
DESCRIPTOR.message_types_by_name['HopResults'] = _HOPRESULTS

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREQUEST,
  __module__ = 'clopper_pb2'
  # @@protoc_insertion_point(class_scope:hopperextension.HelloRequest)
  ))
_sym_db.RegisterMessage(HelloRequest)

Greeting = _reflection.GeneratedProtocolMessageType('Greeting', (_message.Message,), dict(
  DESCRIPTOR = _GREETING,
  __module__ = 'clopper_pb2'
  # @@protoc_insertion_point(class_scope:hopperextension.Greeting)
  ))
_sym_db.RegisterMessage(Greeting)

StatusRequest = _reflection.GeneratedProtocolMessageType('StatusRequest', (_message.Message,), dict(
  DESCRIPTOR = _STATUSREQUEST,
  __module__ = 'clopper_pb2'
  # @@protoc_insertion_point(class_scope:hopperextension.StatusRequest)
  ))
_sym_db.RegisterMessage(StatusRequest)

InstanceUpdate = _reflection.GeneratedProtocolMessageType('InstanceUpdate', (_message.Message,), dict(
  DESCRIPTOR = _INSTANCEUPDATE,
  __module__ = 'clopper_pb2'
  # @@protoc_insertion_point(class_scope:hopperextension.InstanceUpdate)
  ))
_sym_db.RegisterMessage(InstanceUpdate)

HopRequest = _reflection.GeneratedProtocolMessageType('HopRequest', (_message.Message,), dict(
  DESCRIPTOR = _HOPREQUEST,
  __module__ = 'clopper_pb2'
  # @@protoc_insertion_point(class_scope:hopperextension.HopRequest)
  ))
_sym_db.RegisterMessage(HopRequest)

HopResults = _reflection.GeneratedProtocolMessageType('HopResults', (_message.Message,), dict(
  DESCRIPTOR = _HOPRESULTS,
  __module__ = 'clopper_pb2'
  # @@protoc_insertion_point(class_scope:hopperextension.HopResults)
  ))
_sym_db.RegisterMessage(HopResults)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class ClopperStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.SayHello = channel.unary_unary(
          '/hopperextension.Clopper/SayHello',
          request_serializer=HelloRequest.SerializeToString,
          response_deserializer=Greeting.FromString,
          )
      self.UpdateStatus = channel.unary_stream(
          '/hopperextension.Clopper/UpdateStatus',
          request_serializer=StatusRequest.SerializeToString,
          response_deserializer=InstanceUpdate.FromString,
          )
      self.ExecuteHopper = channel.unary_unary(
          '/hopperextension.Clopper/ExecuteHopper',
          request_serializer=HopRequest.SerializeToString,
          response_deserializer=HopResults.FromString,
          )


  class ClopperServicer(object):
    """The greeting service definition.
    """

    def SayHello(self, request, context):
      """Greeting
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateStatus(self, request, context):
      """Status Updates
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ExecuteHopper(self, request, context):
      """Execute hopper
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ClopperServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SayHello': grpc.unary_unary_rpc_method_handler(
            servicer.SayHello,
            request_deserializer=HelloRequest.FromString,
            response_serializer=Greeting.SerializeToString,
        ),
        'UpdateStatus': grpc.unary_stream_rpc_method_handler(
            servicer.UpdateStatus,
            request_deserializer=StatusRequest.FromString,
            response_serializer=InstanceUpdate.SerializeToString,
        ),
        'ExecuteHopper': grpc.unary_unary_rpc_method_handler(
            servicer.ExecuteHopper,
            request_deserializer=HopRequest.FromString,
            response_serializer=HopResults.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'hopperextension.Clopper', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaClopperServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The greeting service definition.
    """
    def SayHello(self, request, context):
      """Greeting
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateStatus(self, request, context):
      """Status Updates
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ExecuteHopper(self, request, context):
      """Execute hopper
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaClopperStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The greeting service definition.
    """
    def SayHello(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Greeting
      """
      raise NotImplementedError()
    SayHello.future = None
    def UpdateStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Status Updates
      """
      raise NotImplementedError()
    def ExecuteHopper(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Execute hopper
      """
      raise NotImplementedError()
    ExecuteHopper.future = None


  def beta_create_Clopper_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('hopperextension.Clopper', 'ExecuteHopper'): HopRequest.FromString,
      ('hopperextension.Clopper', 'SayHello'): HelloRequest.FromString,
      ('hopperextension.Clopper', 'UpdateStatus'): StatusRequest.FromString,
    }
    response_serializers = {
      ('hopperextension.Clopper', 'ExecuteHopper'): HopResults.SerializeToString,
      ('hopperextension.Clopper', 'SayHello'): Greeting.SerializeToString,
      ('hopperextension.Clopper', 'UpdateStatus'): InstanceUpdate.SerializeToString,
    }
    method_implementations = {
      ('hopperextension.Clopper', 'ExecuteHopper'): face_utilities.unary_unary_inline(servicer.ExecuteHopper),
      ('hopperextension.Clopper', 'SayHello'): face_utilities.unary_unary_inline(servicer.SayHello),
      ('hopperextension.Clopper', 'UpdateStatus'): face_utilities.unary_stream_inline(servicer.UpdateStatus),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Clopper_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('hopperextension.Clopper', 'ExecuteHopper'): HopRequest.SerializeToString,
      ('hopperextension.Clopper', 'SayHello'): HelloRequest.SerializeToString,
      ('hopperextension.Clopper', 'UpdateStatus'): StatusRequest.SerializeToString,
    }
    response_deserializers = {
      ('hopperextension.Clopper', 'ExecuteHopper'): HopResults.FromString,
      ('hopperextension.Clopper', 'SayHello'): Greeting.FromString,
      ('hopperextension.Clopper', 'UpdateStatus'): InstanceUpdate.FromString,
    }
    cardinalities = {
      'ExecuteHopper': cardinality.Cardinality.UNARY_UNARY,
      'SayHello': cardinality.Cardinality.UNARY_UNARY,
      'UpdateStatus': cardinality.Cardinality.UNARY_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'hopperextension.Clopper', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
